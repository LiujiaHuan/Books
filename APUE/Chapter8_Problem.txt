//==========================实际用户id，有效用户id，设置用户id============================================//

实际用户ID：有的文章中将其称为真实用户ID，这个ID就是我们登陆unix系统时的身份ID。
有效用户ID：定义了操作者的权限。有效用户ID是进程的属性，决定了该进程对文件的访问权限。

文件的访问权限包括读写和执行。判断某个进程对文件有何权限时，内核会将非超级用户进程的有效ID与文件的所有者ID进行比较，当然，也可能需要比较有效组ID，这关系到具体的权限测试方法，先不在这里说明。而超级用户创建的进程是允许访问整个文件系统的。它的有效ID等于0。不过，这里还有一点需要说明的是，仅仅有合适的有效ID，还不一定就能获得所有或者部分权限。你需要得到被访问文件的允许，这就是文件访问权限位（用户读、用户写、组读等）的责任了。
这里又牵涉到一个“ID”，即文件的所有者ID。文件的所有者ID是什么呢？创建文件是由某用户的进程实现的吧？所以在创建新文件的时候，就将该进程的有效ID作为该文件的所有者ID了。APUE里面有时又将文件的所有者ID称为“文件的用户ID”。
一般情况下，进程的有效用户ID就被设成执行该进程的实际用户ID。比如，用户usr01执行了进程process，process的有效用户ID就设成了用户usr01的ID（实际用户ID）。但是有的时候，一个进程可能要去执行其他用户创建的文件。这时，该进程的有效ID和该文件的所有者ID是不同的（记住文件的所有者Id就是最初创建它的进程有效ID哦）。但是如果文件设置了“设置用户ID位”或者“设置组ID位”，那么该进程在执行该文件的时候，就会将进程的有效ID临时更改为文件的所有者ID。

设置用户ID：设置用户ID是由exec函数复制有效用户ID得来的。所以说设置用户ID是进程有效ID的副本。为什么要保留进程有效ID的副本呢？刚才讲到文件有设置用户ID位时，内核会将执行进程的有效ID临时更改为文件的所有者ID。执行完该文件后总要恢复成原来的有效用户ID吧？所以事先保留个副本啦！
————————————————
版权声明：本文为CSDN博主「abcdef0966」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/abcdef0966/article/details/5725121

//====================================================================================================//
